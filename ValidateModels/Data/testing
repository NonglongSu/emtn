#!/bin/bash


# check parameters (t and rate as for now)
function param_check() {

    # check if EM gave log likelihood error
    exit_status=$(grep error $1 | wc -w)

    if [ "$exit_status" -ne 0 ]
	then
	echo "Log Likelihood error"
	exit 2
    fi

    # get t value
    t=$(grep t= $1 | tr -dc '0-9.')

    # get Rate value
    rate=$(grep Rate $1 | tr -dc '0-9.')

    #TODO: improve range check
    if [ \( $(echo "$rate < 0.999999999"|bc) -eq 1 \) -o \( $(echo "$rate > 1.0000000001"|bc) -eq 1 \) ]; then
	echo "Test failed. Rate is not 1.0 ($rate)"
	exit 3
    #TODO: IDEM as above
    elif [ \( $(echo "$t < $2-0.001"|bc) -eq 1 \) -o \( $(echo "$t > $2+0.001"|bc) -eq 1 \) ]; then
	echo "Test failed. t value does not match ($t)"
	exit 4
    else
	echo "Test passed. t=$t, Rate=$rate"
    fi
}

function jc_dawg_file() {
    #create dawg file
    echo "Tree.Tree = \"(A:$1)B;\"" > jc.dawg
    echo "Subst.Model = \"JC\"" >> jc.dawg
    echo "Root.Length = $2" >> jc.dawg
    echo "Sim.Reps = $3" >> jc.dawg
}

if [ "$#" -eq 2 ]; then
    param_check $@
    exit 0
elif [ "$#" -eq	3 ]; then
    jc_dawg_file $@
    exit 0
elif [ "$#" -eq	5 ]; then
    k2p_dawg_file $@
    exit 0
elif [ "$#" -eq	9 ]; then
    hky_dawg_file $@
    exit 0
elif [ "$#" -eq	10 ]; then
    tn_dawg_file $@
    exit 0
else
    echo "Wrong number of arguments"
    exit 1
fi

